import 'package:syncfusion_flutter_gauges/gauges.dart';


class SectorProgressIndicator extends StatefulWidget {
  final double progressValue;
  final double size;
  const SectorProgressIndicator({
    Key key,
    @required this.progressValue,
    @required this.size,
  }) : super(key: key);

  @override
  State<SectorProgressIndicator> createState() =>
      _SectorProgressIndicatorState();
}

class _SectorProgressIndicatorState extends State<SectorProgressIndicator> {
  @override
  Widget build(BuildContext context) {
    return Container(
        width: widget.size,
        height: widget.size,
        child: SfRadialGauge(
          animationDuration: 0,
          axes: [
            RadialAxis(
              minimum: 0,
              maximum: 100,
              showLabels: false,
              showTicks: false,
              startAngle: 270,
              endAngle: 270,
              axisLineStyle: AxisLineStyle(
                thickness: 0.08,
                color: ColorPath.ironGrey,
                thicknessUnit: GaugeSizeUnit.factor,
              ),
              pointers: <GaugePointer>[
                RangePointer(
                  color: ColorPath.MAIN_COLOR,
                  value: widget.progressValue,
                  width: 0.999,
                  pointerOffset: 0.001,
                  sizeUnit: GaugeSizeUnit.factor,
                )
              ],
            )
          ],
        ));
  }
}
